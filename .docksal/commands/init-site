#!/usr/bin/env bash

#: exec_target = cli

## Initialize/reinstall site
##
## Usage: fin init-site

# Abort if anything fails
set -euo pipefail

#-------------------------- Settings --------------------------------

# PROJECT_ROOT and DOCROOT are set as env variables in cli
SITE_DIRECTORY="default"
DOCROOT_PATH="${PROJECT_ROOT}/${DOCROOT}"
SITEDIR_PATH="${DOCROOT_PATH}/sites/${SITE_DIRECTORY}"

#-------------------------- END: Settings --------------------------------

#-------------------------- Helper functions --------------------------------

# Console colors
green=$'\033[0;32m'
yellow=$'\033[1;33m'
NC=$'\033[0m'

# Copy a settings file.
# Skips if the destination file already exists.
# @param $1 source file
# @param $2 destination file
copy_settings_file()
{
  local source="$1"
  local dest="$2"

  if [[ ! -f ${dest} ]]; then
    printf "%s\n" "Copying ${dest}..."
    cp ${source} ${dest}
  else
    printf "%s\n" "${dest} already in place."
  fi
}

#-------------------------- END: Helper functions --------------------------------

#-------------------------- Functions --------------------------------

composer_install ()
{
  cd "$PROJECT_ROOT"
  printf "%s\n" "${green}Installing dependencies...${NC}"
  composer install
}

# Initialize local settings files
init_settings ()
{
  # drupal-composer/drupal-project creates settings.php from default.settings.php.
  # Since we supply our own settings.php below, we have to drop the default file first.
  # TODO: Uncomment the local config (settings.local.php) include section in settings.php inline instead.
  # That'a the only change we need in the stock settings.php
  rm -f "${SITEDIR_PATH}/settings.php"

  copy_settings_file "${PROJECT_ROOT}/.docksal/settings/settings.php" "${SITEDIR_PATH}/settings.php"
  copy_settings_file "${PROJECT_ROOT}/.docksal/settings/settings.local.php" "${SITEDIR_PATH}/settings.local.php"
}

# Fix file/folder permissions
fix_permissions ()
{
  printf "%s\n" "${green}Making site directory writable...${NC}"
  chmod 755 "${SITEDIR_PATH}"
}

# Install site
site_install ()
{
  cd "$DOCROOT_PATH"

  printf "%s\n" "${green}Installing Drupal...${NC}"
  # We disable email sending here so site-install does not return an error
  # Credit: https://www.drupal.org/project/phpconfig/issues/1826652#comment-12071700
  drush site-install standard -y \
    install_configure_form.enable_update_status_module=NULL \
    --site-name='Patternkit Development Environment'
}

#-------------------------- END: Functions --------------------------------

#-------------------------- Execution --------------------------------

# Project initialization steps
time -p composer_install
fix_permissions
init_settings
time -p site_install

printf "%s\n" "Open ${yellow}http://${VIRTUAL_HOST}${NC} in your browser to verify the setup."
printf "%s\n" "${yellow}Look for admin login credentials in the output above.${NC}"

#-------------------------- END: Execution --------------------------------
